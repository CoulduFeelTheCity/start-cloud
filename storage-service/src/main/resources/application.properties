spring.application.name=storage-service
server.port=9092



spring.cloud.nacos.discovery.server-addr = 192.168.37.139:8848

spring.cloud.alibaba.seata.tx-service-group=storage-service-group
logging.level.io.seata = debug


spring.datasource.druid.url=jdbc:mysql://localhost:3306/seata_storage?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.druid.driverClassName=com.mysql.jdbc.Driver
spring.datasource.druid.username=root
spring.datasource.druid.password=abc123

# swagger\u5f00\u5173
swagger.enabled=true
swagger.basePackage=com.start
swagger.title=storage_service

#rocketMq
apache.rocketmq.producerGroup=GroupTest
apache.rocketmq.namesrvAddr=192.168.37.139:9876
apache.rocketmq.asyncProducerGroup=asyncGroupT
apache.rocketmq.consumerGroup=consumerT
apache.rocketmq.topic=mytopic
apache.rocketmq.tag=storage


#kafka
# \u6307\u5b9akafka \u4ee3\u7406\u5730\u5740\uff0c\u53ef\u4ee5\u591a\u4e2a
spring.kafka.bootstrap-servers=kafka001:9092
# \u6307\u5b9alistener \u5bb9\u5668\u4e2d\u7684\u7ebf\u7a0b\u6570\uff0c\u7528\u4e8e\u63d0\u9ad8\u5e76\u53d1\u91cf
spring.kafka.listener.concurrency=1
# \u6bcf\u6b21\u6279\u91cf\u53d1\u9001\u6d88\u606f\u7684\u6570\u91cf
spring.kafka.producer.batch-size=1000
# \u6307\u5b9a\u9ed8\u8ba4\u6d88\u8d39\u8005group id
spring.kafka.consumer.group-id=myGroup
# \u6307\u5b9a\u9ed8\u8ba4topic id
spring.kafka.template.default-topic=topic-1
spring.kafka.consumer.group-id=test-consumer-group

debug=true
